<?xml version="1.0" encoding="UTF-8"?>
<report type="security">
    <generatedBy id="WSP 1.0"/>
    <bugTypeList>
        <bugType name="SQL Injection">
            <bugList>
                <bug level="1">
                    <url>http://54.186.248.116/acre2.php?lap=%BF%27%22%28</url>
                    <parameter>lap=%BF%27%22%28</parameter>
                    <info>MySQL Injection (lap)</info>
                </bug>
                <bug level="1">
                    <url>http://54.186.248.116/acre2.php</url>
                    <parameter>lap=%BF%27%22%28</parameter>
                    <info>MySQL Injection coming from http://54.186.248.116/</info>
                </bug>
            </bugList>
            <description>
<![CDATA[SQL injection is a technique that exploits a vulnerability occurring in the database of an application.]]>            </description>
            <solution>
<![CDATA[To protect against SQL injection, user input must not directly be embedded in SQL statements. Instead, user input must be escaped or filtered or parameterized statements must be used.]]>            </solution>
            <references>
                <reference>
                    <title>http://www.owasp.org/index.php/SQL_Injection</title>
                    <url>http://www.owasp.org/index.php/SQL_Injection</url>
                </reference>
                <reference>
                    <title>http://en.wikipedia.org/wiki/SQL_injection</title>
                    <url>http://en.wikipedia.org/wiki/SQL_injection</url>
                </reference>
            </references>
        </bugType>
        <bugType name="Blind SQL Injection">
            <bugList>
                <bug level="1">
                    <url>http://54.186.248.116/acre2.php</url>
                    <parameter>lap=%27+or+sleep%287%29%23</parameter>
                    <info>Blind SQL Injection coming from http://54.186.248.116/</info>
                </bug>
                <bug level="1">
                    <url>http://54.186.248.116/forgetpassword.php</url>
                    <parameter>name=%27+or+sleep%287%29%23&amp;submit=jkr0aeivg9</parameter>
                    <info>Blind SQL Injection coming from http://54.186.248.116/forgetpassword.php</info>
                </bug>
            </bugList>
            <description>
<![CDATA[Blind SQL injection is a technique that exploits a vulnerability occurring in the database of an application. This kind of vulnerability is harder to detect than basic SQL injections because no error message will be displayed on the webpage.]]>            </description>
            <solution>
<![CDATA[To protect against SQL injection, user input must not directly be embedded in SQL statements. Instead, user input must be escaped or filtered or parameterized statements must be used.]]>            </solution>
            <references>
                <reference>
                    <title>http://www.imperva.com/resources/adc/blind_sql_server_injection.html</title>
                    <url>http://www.imperva.com/resources/adc/blind_sql_server_injection.html</url>
                </reference>
                <reference>
                    <title>http://www.owasp.org/index.php/Blind_SQL_Injection</title>
                    <url>http://www.owasp.org/index.php/Blind_SQL_Injection</url>
                </reference>
            </references>
        </bugType>
        <bugType name="File Handling">
            <bugList>
                <bug level="1">
                    <url>http://54.186.248.116/showfile.php?filename=http%3A%2F%2Fwww.google.fr%2F</url>
                    <parameter>filename=http%3A%2F%2Fwww.google.fr%2F</parameter>
                    <info>Remote include (filename)</info>
                </bug>
            </bugList>
            <description>
<![CDATA[This attack is also known as Path Transversal or Directory Transversal, its aim is the access to files and directories that are stored outside the web root folder. The attacker tries to explore the directories stored in the web server. The attacker uses some techniques, for instance, the manipulation of variables that reference files with 'dot-dot-slash (../)' sequences and its variations to move up to root directory to navigate through the file system.]]>            </description>
            <solution>
<![CDATA[Prefer working without user input when using file system calls<br>Use indexes rather than actual portions of file names when templating or using language files (ie value 5 from the user submission = Czechoslovakian, rather than expecting the user to return 'Czechoslovakian').<br>Ensure the user cannot supply all parts of the path – surround it with your path code.<br>Validate the user’s input by only accepting known good – do not sanitize the data.<br>Use chrooted jails and code access policies to restrict where the files can be obtained or saved to.]]>            </solution>
            <references>
                <reference>
                    <title>http://www.owasp.org/index.php/Path_Traversal</title>
                    <url>http://www.owasp.org/index.php/Path_Traversal</url>
                </reference>
                <reference>
                    <title>http://www.acunetix.com/websitesecurity/directory-traversal.htm</title>
                    <url>http://www.acunetix.com/websitesecurity/directory-traversal.htm</url>
                </reference>
            </references>
        </bugType>
        <bugType name="Cross Site Scripting">
            <bugList>
                <bug level="1">
                    <url>http://54.186.248.116/login.php?transfer=%22%3E%3C%2Finput%3E%3Cscript%3Ealert%28%27onyhxwm2kg%27%29%3C%2Fscript%3E&amp;lap_price=bidamount%3A</url>
                    <parameter>transfer=%22%3E%3C%2Finput%3E%3Cscript%3Ealert%28%27onyhxwm2kg%27%29%3C%2Fscript%3E&amp;lap_price=bidamount%3A</parameter>
                    <info>XSS (transfer)</info>
                </bug>
                <bug level="1">
                    <url>http://54.186.248.116/login.php?transfer=laptop%3A&amp;lap_price=%22%3E%3C%2Finput%3E%3Cscript%3Ealert%28%2788z29xsrre%27%29%3C%2Fscript%3E</url>
                    <parameter>transfer=laptop%3A&amp;lap_price=%22%3E%3C%2Finput%3E%3Cscript%3Ealert%28%2788z29xsrre%27%29%3C%2Fscript%3E</parameter>
                    <info>XSS (lap_price)</info>
                </bug>
                <bug level="1">
                    <url>http://54.186.248.116/acre2.php?lap=%3Cscript%3Ealert%28%226qmugxb9q0%22%29%3C%2Fscript%3E</url>
                    <parameter>lap=%3Cscript%3Ealert%28%226qmugxb9q0%22%29%3C%2Fscript%3E</parameter>
                    <info>XSS (lap)</info>
                </bug>
                <bug level="1">
                    <url>http://54.186.248.116/register1.php</url>
                    <parameter>name=%3C%3F%3D%24_POST%5Bname%5D%3F%3E&amp;ph_no=%3Cscript%3Ealert%28%27j3vqg9xln7%27%29%3C%2Fscript%3E&amp;pass=h2sd6c7idw&amp;hidden=firstForm&amp;password=on&amp;user_name=%3C%3F%3D%24_POST%5Buser_name%5D%3F%3E&amp;email=%3C%3F%3D%24_POST%5Bemail%5D%3F%3E&amp;address=on&amp;Submit+=Submit</parameter>
                    <info>XSS (ph_no)</info>
                </bug>
                <bug level="1">
                    <url>http://54.186.248.116/register1.php</url>
                    <parameter>name=%3Cscript%3Ealert%28%27e2ktnbq5ze%27%29%3C%2Fscript%3E&amp;ph_no=j3vqg9xln7&amp;pass=h2sd6c7idw&amp;hidden=firstForm&amp;password=on&amp;user_name=%3C%3F%3D%24_POST%5Buser_name%5D%3F%3E&amp;email=%3C%3F%3D%24_POST%5Bemail%5D%3F%3E&amp;address=on&amp;Submit+=Submit</parameter>
                    <info>XSS (name)</info>
                </bug>
                <bug level="1">
                    <url>http://54.186.248.116/register1.php</url>
                    <parameter>name=e2ktnbq5ze&amp;ph_no=j3vqg9xln7&amp;pass=h2sd6c7idw&amp;hidden=firstForm&amp;password=on&amp;user_name=%3C%3F%3D%24_POST%5Buser_name%5D%3F%3E&amp;email=%3C%3F%3D%24_POST%5Bemail%5D%3F%3E&amp;address=%3Cscript%3Ealert%28%27jyayomd8ei%27%29%3C%2Fscript%3E&amp;Submit+=Submit</parameter>
                    <info>XSS (address)</info>
                </bug>
                <bug level="1">
                    <url>http://54.186.248.116/register1.php</url>
                    <parameter>name=e2ktnbq5ze&amp;ph_no=j3vqg9xln7&amp;pass=h2sd6c7idw&amp;hidden=mjq10gzgoh&amp;password=bxbek39jkm&amp;user_name=%3Cscript%3Ealert%28%27w9hg0dpmr7%27%29%3C%2Fscript%3E&amp;email=%3C%3F%3D%24_POST%5Bemail%5D%3F%3E&amp;address=jyayomd8ei&amp;Submit+=Submit</parameter>
                    <info>XSS (user_name)</info>
                </bug>
                <bug level="1">
                    <url>http://54.186.248.116/register1.php</url>
                    <parameter>name=e2ktnbq5ze&amp;ph_no=j3vqg9xln7&amp;pass=h2sd6c7idw&amp;hidden=mjq10gzgoh&amp;password=bxbek39jkm&amp;user_name=w9hg0dpmr7&amp;email=%3Cscript%3Ealert%28%27rwrn73sy1n%27%29%3C%2Fscript%3E&amp;address=jyayomd8ei&amp;Submit+=Submit</parameter>
                    <info>XSS (email)</info>
                </bug>
                <bug level="1">
                    <url>http://54.186.248.116/register1.php</url>
                    <parameter>name=%3C%3F%3D%24_POST%5Bname%5D%3F%3E&amp;ph_no=%3Cscript%3Ealert%28%27xxjg6r5bjp%27%29%3C%2Fscript%3E&amp;pass=on&amp;hidden=firstForm&amp;password=on&amp;user_name=%3C%3F%3D%24_POST%5Buser_name%5D%3F%3E&amp;email=%3C%3F%3D%24_POST%5Bemail%5D%3F%3E&amp;address=on&amp;Submit+=Submit</parameter>
                    <info>XSS (ph_no)</info>
                </bug>
                <bug level="1">
                    <url>http://54.186.248.116/register1.php</url>
                    <parameter>name=%3Cscript%3Ealert%28%27e1c4jiwy8t%27%29%3C%2Fscript%3E&amp;ph_no=xxjg6r5bjp&amp;pass=on&amp;hidden=firstForm&amp;password=on&amp;user_name=%3C%3F%3D%24_POST%5Buser_name%5D%3F%3E&amp;email=%3C%3F%3D%24_POST%5Bemail%5D%3F%3E&amp;address=on&amp;Submit+=Submit</parameter>
                    <info>XSS (name)</info>
                </bug>
                <bug level="1">
                    <url>http://54.186.248.116/register1.php</url>
                    <parameter>name=e1c4jiwy8t&amp;ph_no=xxjg6r5bjp&amp;pass=on&amp;hidden=firstForm&amp;password=on&amp;user_name=%3C%3F%3D%24_POST%5Buser_name%5D%3F%3E&amp;email=%3C%3F%3D%24_POST%5Bemail%5D%3F%3E&amp;address=%3Cscript%3Ealert%28%277tj2wmq451%27%29%3C%2Fscript%3E&amp;Submit+=Submit</parameter>
                    <info>XSS (address)</info>
                </bug>
                <bug level="1">
                    <url>http://54.186.248.116/register1.php</url>
                    <parameter>name=e1c4jiwy8t&amp;ph_no=xxjg6r5bjp&amp;pass=on&amp;hidden=k77rq396rd&amp;password=a4g33kt3ej&amp;user_name=%3Cscript%3Ealert%28%279j9u6bcpdr%27%29%3C%2Fscript%3E&amp;email=%3C%3F%3D%24_POST%5Bemail%5D%3F%3E&amp;address=7tj2wmq451&amp;Submit+=Submit</parameter>
                    <info>XSS (user_name)</info>
                </bug>
                <bug level="1">
                    <url>http://54.186.248.116/register1.php</url>
                    <parameter>name=e1c4jiwy8t&amp;ph_no=xxjg6r5bjp&amp;pass=on&amp;hidden=k77rq396rd&amp;password=a4g33kt3ej&amp;user_name=9j9u6bcpdr&amp;email=%3Cscript%3Ealert%28%2797806np723%27%29%3C%2Fscript%3E&amp;address=7tj2wmq451&amp;Submit+=Submit</parameter>
                    <info>XSS (email)</info>
                </bug>
                <bug level="1">
                    <url>http://54.186.248.116/forgetpassword.php</url>
                    <parameter>name=%3Cscript%3Ealert%28%2735klr4rrws%27%29%3C%2Fscript%3E&amp;submit=submit</parameter>
                    <info>XSS (name)</info>
                </bug>
            </bugList>
            <description>
<![CDATA[Cross-site scripting (XSS) is a type of computer security vulnerability typically found in web applications which allow code injection by malicious web users into the web pages viewed by other users. Examples of such code include HTML code and client-side scripts.]]>            </description>
            <solution>
<![CDATA[The best way to protect a web application from XSS attacks is ensure that the application performs validation of all headers, cookies, query strings, form fields, and hidden fields. Encoding user supplied output in the server side can also defeat XSS vulnerabilities by preventing inserted scripts from being transmitted to users in an executable form. Applications can gain significant protection from javascript based attacks by converting the following characters in all generated output to the appropriate HTML entity encoding:  &lt;, &gt;, &amp;, &quot;, ', (, ), #, %, ; , +, -.]]>            </solution>
            <references>
                <reference>
                    <title>http://en.wikipedia.org/wiki/Cross-site_scripting</title>
                    <url>http://en.wikipedia.org/wiki/Cross-site_scripting</url>
                </reference>
                <reference>
                    <title>http://www.owasp.org/index.php/Cross_Site_Scripting</title>
                    <url>http://www.owasp.org/index.php/Cross_Site_Scripting</url>
                </reference>
            </references>
        </bugType>
        <bugType name="CRLF">
            <bugList/>
            <description>
<![CDATA[The term CRLF refers to Carriage Return (ASCII 13, \r) Line Feed (ASCII 10, \n). They're used to note the termination of a line, however, dealt with differently in today’s popular Operating Systems. For example: in Windows both a CR and LF are required to note the end of a line, whereas in Linux/UNIX a LF is only required. This combination of CR and LR is used for example when pressing 'Enter' on the keyboard. Depending on the application being used, pressing 'Enter' generally instructs the application to start a new line, or to send a command.]]>            </description>
            <solution>
<![CDATA[Check the submitted parameters and do not allow CRLF to be injected by filtering CRLF]]>            </solution>
            <references>
                <reference>
                    <title>http://www.owasp.org/index.php/CRLF_Injection</title>
                    <url>http://www.owasp.org/index.php/CRLF_Injection</url>
                </reference>
                <reference>
                    <title>http://www.acunetix.com/websitesecurity/crlf-injection.htm</title>
                    <url>http://www.acunetix.com/websitesecurity/crlf-injection.htm</url>
                </reference>
            </references>
        </bugType>
        <bugType name="Commands execution">
            <bugList/>
            <description>
<![CDATA[This attack consists in executing system commands on the server. The attacker tries to inject this commands in the request parameters]]>            </description>
            <solution>
<![CDATA[Prefer working without user input when using file system calls]]>            </solution>
            <references>
                <reference>
                    <title>http://www.owasp.org/index.php/Command_Injection</title>
                    <url>http://www.owasp.org/index.php/Command_Injection</url>
                </reference>
            </references>
        </bugType>
        <bugType name="Resource consumption">
            <bugList/>
            <description>
<![CDATA[An attacker can force a victim to consume more resources than should be allowed for the attacker's level of access. The program can potentially fail to release or incorrectly release a system resource. A resource is not properly cleared and made available for re-use. It can also be a false-positive due to a too short timeout used for the scan.]]>            </description>
            <solution>
<![CDATA[Configure properly the software giving the ressource to avoid memory consumption or system load.]]>            </solution>
            <references>
                <reference>
                    <title>http://www.owasp.org/index.php/Asymmetric_resource_consumption_(amplification)</title>
                    <url>http://www.owasp.org/index.php/Asymmetric_resource_consumption_(amplification)</url>
                </reference>
            </references>
        </bugType>
        <bugType name="Htaccess Bypass">
            <bugList/>
            <description>
<![CDATA[htaccess files are used to restrict access to some files or HTTP method. In some case it may be possible to bypass this restriction and access the files.]]>            </description>
            <solution>
<![CDATA[Make sure every HTTP method is forbidden if the credentials are bad.]]>            </solution>
            <references>
                <reference>
                    <title>http://blog.teusink.net/2009/07/common-apache-htaccess-misconfiguration.html</title>
                    <url>http://blog.teusink.net/2009/07/common-apache-htaccess-misconfiguration.html</url>
                </reference>
            </references>
        </bugType>
        <bugType name="Backup file">
            <bugList/>
            <description>
<![CDATA[It may be possible to find backup files of scripts on the webserver that thewebadmin put here to save a previous version or backup files that are automaticallygenerated by the software editor used (like for example Emacs). These copies may revealinteresting informations like source code or credentials]]>            </description>
            <solution>
<![CDATA[The webadmin must manually delete the backup files or remove it from the web root. He shouldalso reconfigure its editor to deactivate automatic backups]]>            </solution>
            <references>
                <reference>
                    <title>Testing for Old, Backup and Unreferenced Files (OWASP-CM-006)</title>
                    <url>http://www.owasp.org/index.php/Testing_for_Old,_Backup_and_Unreferenced_Files_(OWASP-CM-006)</url>
                </reference>
            </references>
        </bugType>
        <bugType name="Potentially dangerous file">
            <bugList/>
            <description>
<![CDATA[Some scripts are known to be vulnerable or dangerous. Databases of such files exists and attackers often scan websites to find such vulnerabilities and exploit them. ]]>            </description>
            <solution>
<![CDATA[The administrator should frequently check for new version of the scripts used on his server and keep informed of vulnerabilities in the software programs he uses by reading security-list or specialised RSS.]]>            </solution>
            <references>
                <reference>
                    <title>The Open Source Vulnerability Database</title>
                    <url>http://osvdb.org/</url>
                </reference>
            </references>
        </bugType>
    </bugTypeList>
</report>
